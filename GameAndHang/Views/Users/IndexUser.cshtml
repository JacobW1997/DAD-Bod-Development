@model GameAndHang.Models.User
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "IndexUser";
}
<script>
    function myFunction() {
        $("#confirm").show()
    }
    function hideConfirm() {
        $("#confirm").hide()
    }
</script>
<div class="container" id="profileCard">
    <div class="row">
        <div class="col-12">
            <div class="card">

                <div class="card-body">
                    <div class="card-title mb-4">
                        <div class="d-flex justify-content-start">
                            <div class="image-container">
                                @using (Html.BeginForm("IndexPhoto", "Users", FormMethod.Post, FormMethod.Post, new { enctype = "multipart/form-data", id = "file" }))
                                {
                                    if (Model.ProfilePic == null)
                                    {
                                        <img src="http://placehold.it/150x150" id="imgProfile" style="width: 150px; height: 150px" class="img-thumbnail" />
                                    }
                                    else
                                    {
                                        string imageBase64 = Convert.ToBase64String(Model.ProfilePic);
                                        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);

                                        <img src="@imageSrc" style="width: 150px; height: 200px" class="img-thumbnail" />
                                    }
                                    <div class="middle">
                                        <label for="files" class="btn btn-secondary" style="margin-top:6px;">Change</label>
                                        <input style="display: none;" accept="image/*" type="file" name="file" id="files" value="Change" onchange="myFunction()" />
                                        <input type="submit" class="btn btn-secondary" value="Confirm" id="confirm" style="display: none;" onclick="hideConfirm()" />
                                    </div>
                                }
                            </div>
                            <div class="userData ml-3">
                                <h2 class="d-block" style="font-size: 2.5rem; font-weight: bold">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</h2>
                                <h5 class="d-block"> @Html.DisplayFor(model => model.DisplayName)</h5>
                                <h5 class="d-block"> @Html.DisplayFor(model => model.AspNetUser.Email)</h5>
                                <h5 class="d-block">"@Html.DisplayFor(model => model.Bio)"</h5>
                                <h6 class="d-block"> Host XP:  @Model.HostXP</h6>
                                @Html.ActionLink("Edit Account Info", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
                            </div>
                            <div class="ml-auto">
                                <input type="button" class="btn btn-primary d-none" id="btnDiscard" value="Discard Changes" />
                            </div>
                        </div>
                    </div>
                    <div class="nav-pills" id="navPills">
                        <ul class="nav nav-pills">
                            <li class="active"><a id="tab" data-toggle="pill" href="#hostedEvents"> Registered Events </a></li>
                            <li><a id="tab" data-toggle="pill" href="#signedUpEvents"> Hosted Events </a></li>
                            <li><a id="tab" data-toggle="pill" href="#upcomingEvents"> Upcoming Events </a></li>
                            <li><a id="tab" data-toggle="pill" href="#FriendsList"> Friends List </a></li>
                            <li><a id="tab" data-toggle="pill" href="#displayReview"> Host Reviews </a></li>
                        </ul>
                    </div>
                    <div>
                        <h7 class="d-block" id="hostlevel" style="position: absolute; top:10px; right:10px">
                            Level @Model.HostLevel
                            @if (Model.HostLevel == 1)
                            {
                                <img src="~/Content/Images/Level1.png" id="level" />
                            }
                            else if (Model.HostLevel == 2)
                            {
                                <img src="~/Content/Images/Level2.png" id="level" />
                            }
                            else if (Model.HostLevel == 3)
                            {
                                <img src="~/Content/Images/Level3.png" id="level" />
                            }
                            else if (Model.HostLevel == 4)
                            {
                                <img src="~/Content/Images/Level4.png" id="ribbon" />
                            }
                            else if (Model.HostLevel == 5)
                            {
                                <img src="~/Content/Images/Level5.png" id="ribbon" />
                            }
                            else if (Model.HostLevel == 6)
                            {
                                <img src="~/Content/Images/Level6.png" id="ribbon" />
                            }
                            else if (Model.HostLevel == 7)
                            {
                                <img src="~/Content/Images/Level7.png" id="orb" />
                            }
                        </h7>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<hr />
<div class="tab-content">
    @if (Model.EventPlayers.Count() > 0)
    {
        <div id="hostedEvents" class="tab-pane fade in card">
            <hr />
            <h4 class="card-header">Events that @Html.DisplayFor(model => model.FirstName) is Signed Up For:</h4>
            <br />
            <table class="table-hover card-body">
                <tr>
                    <th>Event Name</th>
                    <th>Event Date/Time</th>
                    <th>Event Location</th>
                    <th>Event Description</th>
                </tr>
                @foreach (var eventPlayer in Model.EventPlayers)
                {
                    <tr>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.EventName)</td>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.Date)</td>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.EventLocation)</td>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.EventDescription)</td>
                        <td>@Html.ActionLink("Details", "Details", "Events", new { id = eventPlayer.EventID }, "")</td>
                    </tr>
                }
            </table>
        </div>
    }

    @if (Model.Events.Count() > 0)
    {
        <div id="signedUpEvents" class="tab-pane fade in card">
            <hr />
            <h4 class="card-header">Events that @Html.DisplayFor(model => model.FirstName) is Hosting:</h4>
            <br />
            <table class="table-hover card-body">
                <tr>
                    <th>Event Name</th>
                    <th>Event Date/Time</th>
                    <th>Event Location </th>
                    <th>Event Description</th>
                </tr>
                @foreach (var hostedEvent in Model.Events)
                {
                    <tr>
                        <td>@Html.DisplayFor(e => hostedEvent.EventName)</td>
                        <td>@Html.DisplayFor(e => hostedEvent.Date)</td>
                        <td>@Html.DisplayFor(e => hostedEvent.EventLocation)</td>
                        <td> @Html.DisplayFor(e => hostedEvent.EventDescription)</td>
                        <td> @Html.ActionLink("Details", "Details", "Events", new { id = hostedEvent.ID }, "") </td>
                        <td>@Html.ActionLink("Edit", "Edit", "Events", new { id = hostedEvent.ID }, "")</td>
                    </tr>
                }
            </table>
        </div>
    }

    @if (Model.Events.Count() > 0)
    {
        <div id="upcomingEvents" class="tab-pane fade in card">
            <hr />
            <h4 class="card-header">@Html.DisplayFor(model => model.FirstName)'s Upcoming Events:</h4>
            <br />
            <table class="table-hover card-body">
                <tr>
                    <th>Event Name</th>
                    <th>Event Date/Time</th>
                    <th>Event Location</th>
                    <th>Event Description</th>
                </tr>

                @foreach (var hostedEvent in Model.Events)
                {
                    if (hostedEvent.Date <= DateTime.Now.AddDays(30) && hostedEvent.Date > DateTime.Now.AddDays(-1))
                    {
                        <tr>
                            <td>@Html.DisplayFor(e => hostedEvent.EventName)</td>
                            <td>@Html.DisplayFor(e => hostedEvent.Date)</td>
                            <td>@Html.DisplayFor(e => hostedEvent.EventLocation)</td>
                            <td>@Html.DisplayFor(e => hostedEvent.EventDescription)</td>
                            <td>@Html.ActionLink("Details", "Details", "Events", new { id = hostedEvent.ID }, "")</td>
                            <td>@Html.ActionLink("Edit", "Edit", "Events", new { id = hostedEvent.ID }, "")</td>
                        </tr>
                    }
                }
            </table>
        </div>
    }

        <div id="FriendsList" class="tab-pane fade in">
            
            <h4>@Html.DisplayFor(model => model.FirstName)'s Friends List:</h4>
            <br />
            <table class="table-hover">
                @if (ViewBag.PendingFriends.Count != 0)
                 {

                    <tr> Pending: </tr>
                    foreach (var person in ViewBag.PendingFriends)
                     {
                        <tr class="card" id="friendCard">
                            <td>
                                <div class="card-img">
                                    @if (person.ProfilePic == null)
                                    {
                                        <img src="http://placehold.it/150x150" id="friendPic" class="img-thumbnail" />
                                    }
                                    else
                                    {
                                        string imageBase64 = Convert.ToBase64String(person.ProfilePic);
                                        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                        <img src="@imageSrc" id="friendPic" />
                                    }@person.FirstName @person.LastName @Html.ActionLink("Confirm Friend?", "ConfirmRelationship", "Relationship", new { PrimaryID = person.ID, type = 1 }, new { onclick = "return HelpConfirmFriendRequest(this);" })
                                </div>
                            </td>
                        </tr>
                     } 
                 }
            </table>
            <table>
                @if (ViewBag.UnconfirmedFriends.Count != 0)
                 {
                    <tr>Unconfirmed:</tr>
                    foreach (var person in ViewBag.UnconfirmedFriends)
                    {
                      var id = person.ID;
                        <tr class="card" id="friendCard">
                            <td>
                                <div class="card-img">
                                    @if (person.ProfilePic == null)
                                    {
                                        <img src="http://placehold.it/150x150" id="friendPic"class="img-thumbnail" />
                                    }
                                    else
                                    {

                                        string imageBase64 = Convert.ToBase64String(person.ProfilePic);
                                        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                        <img src="@imageSrc" id="friendPic" />

                                    }

                                    @person.FirstName @person.LastName @Html.ActionLink("Profile", "HostProfile/", "Users", new { host = person.ID }, new { onclick = "return NavigetToFriend(this);" })
                                </div>
                            </td>
                      </tr>
                    }
                }
            </table>
            <table>
                @if (ViewBag.ConfirmedFriends.Count != 0)
                 {
                    <tr>Confirmed Friends:</tr>
                    foreach (var person in ViewBag.ConfirmedFriends)
                    {
                    <tr class="card" id="friendCard">
                        <td>
                            <div class="card-img">
                                @if (person.ProfilePic == null)
                                {
                                    <img src="http://placehold.it/150x150" id="friendPic" class="img-thumbnail" />
                                }
                                else
                                {
                                    string imageBase64 = Convert.ToBase64String(person.ProfilePic);
                                    string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                    <img src="@imageSrc" id="friendPic" />
                                }
                                @person.FirstName @person.LastName @Html.ActionLink("Profile", "HostProfile/", "Users", new { host = person.ID }, new { onclick = "return NavigetToFriend(this);" })
                            </div>
                        </td>
                    </tr>
                    }
                }

            </table>
        </div>



    <div id="displayReview" class="tab-pane fade in card">
        <ul style="margin-top: 10px; background-color:#08415C">
            @foreach (var item in ViewBag.Reviews)
            {
                <li id="listitem"> @item</li>
            }
        </ul>
    </div>
</div>

<style>
        #displayReview{
        margin-top: 5px;
        background: #08415C;
        padding: 8px;
    }
        #listitem{
        font-size: 20px;
        list-style-type: square;
        color: white;
    }
    #signedUpEvents{
        background-color:#08415C;
    }
    #upcomingEvents{
        background-color:#08415C;
    }
        #friendCard{
            height:150px;
            width:500px;
            background-color:#08415C;
            border-style: solid;
            color:white;
            font-size:24px;
        }
        #friendPic{
            height: 100px;
            width: 100px;
            border-style: solid;
            border-color:white;
            border-width:1px;
            background-color: white;
        }
    .card-body {
        background-color: #08415C;
        background-size: 700px;
        border-style: solid;
    }
    .table-hover {
        margin: 20px;
    }
    tr {
        margin: 20px;
    }
    th {
        margin: 20px;
        min-width: 75px;
        padding-right: 20px;
    }
    td {
        margin: 20px;
        min-width: 75px;
        padding-right: 20px;
    }
    #profileCard {
        margin-top: 25px;
        color: white;
    }
    #editProfile {
        margin-left: 5px;
    }
    body {
        background-color: #93B7BE
    }
    .body-content {
        padding-left: 15px;
        padding-right: 15px;
        color: black;
    }
    #tab {
        background-color: Highlight;
        margin-left: 8px;
        color: black;
        border-radius: 5%;
        padding: 5px;
        font-size: 24px;
    }
    #navPills {
        margin: auto;
        width: 90%;
    }

    
#level {
    height: 70px;
    width: 70px;
}


#ribbon {
    height: 60px;
    width: 60px;
}

#orb {
    height: 60px;
    width: 60px;
}

#hostlevel {
    font-size: 30px;
}


    #eventCard #signedUpEvents #upcomingEvents {
    background: #08415C;
    color: white;
    padding: 8px;
    font-size:20px;
}
    #hostedEvents{
        background:#08415C;
        border:none;
        
    }
    .table-hover{
        border:none;
    }
    .tbody{
                border:none;
    }
    .table{
        padding:10px;
        margin-bottom:20px;
    }
    .card{
        color:white;
    }



</style>


<script src="~/Scripts/RelationshipFunctions.js"></script>