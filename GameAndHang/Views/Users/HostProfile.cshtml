@model GameAndHang.Models.User
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "HostProfile";
}
<script>
    function myFunction() {
        $("#confirm").show()
    }
    function hideConfirm() {
        $("#confirm").hide()
    }
</script>
@if (User.Identity.GetUserId() != null)
{
    <div class="container" style="margin-top:3%">
        <a href="#" class="btn btn-info" onclick="AddExperience(0)">Rate this host</a>

        <div class="modal fade" id="mymodal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 align="center" id="modaltitle" style="font-size:20px;"></h4>
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                    </div>
                    <div class="modal-body">
                        <p align="center">Please rate the host below (1 = worst host, 5 = best host)</p>
                        @using (Html.BeginForm("ReviewCreate", "Reviews", FormMethod.Get))
                        {
                            @Html.HiddenFor(i => i.ID, new { id = "modelID" })
                            <div class="form-group required" style="position: relative; left: 150px;">
                                @Html.RadioButton("Answer", "1") <span>1</span>
                                @Html.RadioButton("Answer", "2") <span>2</span>
                                @Html.RadioButton("Answer", "3") <span>3</span>
                                @Html.RadioButton("Answer", "4") <span>4</span>
                                @Html.RadioButton("Answer", "5") <span>5</span>
                            </div>
                            <p style="position: relative; left: 140px;">Leave a comment below</p>
                            <div class="form-group" style="position: relative; left: 90px;">
                                <textarea rows="10" style="width:1000px" id="reviewAnswer" name="review"></textarea>
                            </div>
                            <div class="form-group" style="position: relative; left: 75px;">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Submit" class="btn btn-block btn-primary" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="container" id="profileCard">
    <div class="row">
        <div class="col-12">
            <div class="card" style="position: relative">

                <div class="card-body">
                    <div class="card-title mb-4">
                        <div class="d-flex justify-content-start">
                            <div class="image-container">
                                @using (Html.BeginForm("IndexPhoto", "Users", FormMethod.Post, FormMethod.Post, new { enctype = "multipart/form-data", id = "file" }))
                                {
                                    if (Model.ProfilePic == null)
                                    {
                                        <img src="http://placehold.it/150x150" id="imgProfile" style="width: 150px; height: 150px" class="img-thumbnail" />
                                    }
                                    else
                                    {
                                        string imageBase64 = Convert.ToBase64String(Model.ProfilePic);
                                        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);

                                        <img src="@imageSrc" style="width: 150px; height: 200px" class="img-thumbnail" />
                                    }
                                    <div class="middle">
                                        <label id="relationshipBtn" class="btn btn-secondary" style="margin-top:6px;">BTN</label>
                                        @Html.ActionLink("Send Request", "SendFriendRequest", "Relationship", new { recieverID = Model.ID }, new { onclick = "return HelpSendFriendRequest(this);" })
                                    </div>

                                }
                            </div>
                            <div class="userData ml-3">
                                <h2 class="d-block" style="font-size: 2.5rem; font-weight: bold">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</h2>
                                <h4 class="d-block"> @Html.DisplayFor(model => model.AspNetUser.Email)</h4>
                                <h5 class="d-block">"@Html.DisplayFor(model => model.Bio)"</h5>
                                <h6 class="d-block"> Host XP:  @Model.HostXP</h6>
                                <h6 class="d-block"> Host rating:  @ViewBag.Rating (out of 5)</h6>
                            </div>
                            <div class="ml-auto">
                                <input type="button" class="btn btn-primary d-none" id="btnDiscard" value="Discard Changes" />
                            </div>
                        </div>
                    </div>
                    <div class="nav-pills" id="navPills">
                        <ul class="nav nav-pills">
                            <li class="active"><a id="tab" data-toggle="pill" href="#hostedEvents"> Events </a></li>
                            <li><a id="tab" data-toggle="pill" href="#signedUpEvents"> Hosted Events </a></li>
                            <li><a id="tab" data-toggle="pill" href="#upcomingEvents"> Upcoming Events </a></li>
                            <li><a id="tab" data-toggle="pill" href="#FriendsList"> Friends List </a></li>
                            <li><a id="tab" data-toggle="pill" href="#Review"> Leave a Review </a></li>
                            <li><a id="tab" data-toggle="pill" href="#displayReview"> Host Reviews </a></li>
                        </ul>
                    </div>
                    <div>
                        <h7 class="d-block" id="hostlevel" style="position: absolute; top:10px; right:10px">
                            Level @Model.HostLevel
                            @if (Model.HostLevel == 1)
                            {
                                <img src="~/Content/Images/Level1.png" id="level" />
                            }
                            else if (Model.HostLevel == 2)
                            {
                                <img src="~/Content/Images/Level2.png" id="level" />
                            }
                            else if (Model.HostLevel == 3)
                            {
                                <img src="~/Content/Images/Level3.png" id="level" />
                            }
                            else if (Model.HostLevel == 4)
                            {
                                <img src="~/Content/Images/Level4.png" id="ribbon" />
                            }
                            else if (Model.HostLevel == 5)
                            {
                                <img src="~/Content/Images/Level5.png" id="ribbon" />
                            }
                            else if (Model.HostLevel == 6)
                            {
                                <img src="~/Content/Images/Level6.png" id="ribbon" />
                            }
                            else if (Model.HostLevel == 7)
                            {
                                <img src="~/Content/Images/Level7.png" id="orb" />
                            }
                        </h7>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="tab-content">
    @if (Model.EventPlayers.Count() > 0)
    {
    <hr />
        <div id="hostedEvents" class="tab-pane fade in active">
            <hr />
            <h4>Events that @Html.DisplayFor(model => model.FirstName) is Signed Up For:</h4>
            <br />
            <table class="table-hover">
                <tr>
                    <th>Event Name</th>
                    <th>Event Date/Time</th>
                    <th>Event Location</th>
                    <th>Event Description</th>
                </tr>
                @foreach (var eventPlayer in Model.EventPlayers)
                {
                    <tr>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.EventName)</td>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.Date)</td>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.EventLocation)</td>
                        <td>@Html.DisplayFor(e => eventPlayer.Event.EventDescription)</td>
                        <td>@Html.ActionLink("Details", "Details", "Events", new { id = eventPlayer.EventID }, "")</td>
                    </tr>
                }
            </table>
        </div>
    }

    @if (Model.Events.Count() > 0)
    {
        <div id="signedUpEvents" class="tab-pane fade in active">
            <hr />
            <h4>Events that @Html.DisplayFor(model => model.FirstName) is Hosting:</h4>
            <br />
            <table class="table-hover">
                <tr>
                    <th>Event Name</th>
                    <th>Event Date/Time</th>
                    <th>Event Location </th>
                    <th>Event Description</th>
                </tr>
                @foreach (var hostedEvent in Model.Events)
                {
                    <tr>
                        <td>@Html.DisplayFor(e => hostedEvent.EventName)</td>
                        <td>@Html.DisplayFor(e => hostedEvent.Date)</td>
                        <td>@Html.DisplayFor(e => hostedEvent.EventLocation)</td>
                        <td> @Html.DisplayFor(e => hostedEvent.EventDescription)</td>
                        <td> @Html.ActionLink("Details", "Details", "Events", new { id = hostedEvent.ID }, "") </td>
                        <td>@Html.ActionLink("Edit", "Edit", "Events", new { id = hostedEvent.ID }, "")</td>
                    </tr>
                }
            </table>
        </div>
    }

    @if (Model.Events.Count() > 0)
    {
        <div id="upcomingEvents" class="tab-pane fade in active">
            <hr />
            <h4>@Html.DisplayFor(model => model.FirstName)'s Upcoming Events:</h4>
            <br />
            <table class="table-hover">
                <tr>
                    <th>Event Name</th>
                    <th>Event Date/Time</th>
                    <th>Event Location</th>
                    <th>Event Description</th>
                </tr>
                @foreach (var hostedEvent in Model.Events)
                {
                    if (hostedEvent.Date <= DateTime.Now.AddDays(30) && hostedEvent.Date > DateTime.Now.AddDays(-1))
                    {
                        <tr>
                            <td>@Html.DisplayFor(e => hostedEvent.EventName)</td>
                            <td>@Html.DisplayFor(e => hostedEvent.Date)</td>
                            <td>@Html.DisplayFor(e => hostedEvent.EventLocation)</td>
                            <td>@Html.DisplayFor(e => hostedEvent.EventDescription)</td>
                            <td>@Html.ActionLink("Details", "Details", "Events", new { id = hostedEvent.ID }, "")</td>
                            <td>@Html.ActionLink("Edit", "Edit", "Events", new { id = hostedEvent.ID }, "")</td>
                        </tr>
                    }
                }
            </table>
        </div>
    }

<div id="FriendsList" class="tab-pane fade in active">
    <h4>@Html.DisplayFor(model => model.FirstName)'s Friends List:</h4>
    <table>
        @if (ViewBag.ConfirmedFriends.Count != 0)
            
        {
        foreach (var person in ViewBag.ConfirmedFriends)
        {
        <tr class="card" id="friendCard">
            <td>
                <div class="card-img">
                    @if (person.ProfilePic == null)
                    {
                        <img src="http://placehold.it/150x150" id="friendPic"  class="img-thumbnail" />
                    }
                    else
                    {
                        string imageBase64 = Convert.ToBase64String(person.ProfilePic);
                        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                        <img src="@imageSrc" id="friendPic" />
                    }
                    @person.FirstName @person.LastName @Html.ActionLink("Profile", "HostProfile/", "Users", new { host = person.ID }, new { onclick = "return NavigetToFriend(this);" })
                </div>

                    
               
            </td>
        </tr>
        }
        }

    </table>

</div>

        @using (Html.BeginForm("ReviewCreate", "Reviews", FormMethod.Get))
        {
            <div id="Review" class="tab-pane fade in active">
                <div class="form-horizontal" id="myForm" method="post" name="review">
                    <div class="control-group">
                        <label class="control-label tab-pane fade in active">Review</label>
                        <div class="form-group">
                            <textarea rows="10" style="width:600px" id="reviewAnswer" name="review"></textarea>
                        </div>
                        @Html.HiddenFor(i => i.ID)
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div id="displayReview" class="tab-pane fade in active">
            <ul>
                @foreach (var item in ViewBag.Reviews)
                {
                    <li> @item</li>
                }
            </ul>
        </div>
    </div>


    <script>
        function AddExperience(ReviwerID) {
            $("#modaltitle").html("Please rate your experience with the host and add a comment about the event");
            $("#mymodal").modal();
            $('div.form-group.required').length > 0
        }
    </script>



    <style>
        #friendCard{
            height:150px;
            width:500px;
            background-color:#08415C;
            border-style: solid;
            color:white;
            font-size:24px;
        }
        #friendPic{
            height: 100px;
            width: 100px;
            border-style: solid;
            border-color:white;
            border-width:1px;
            background-color: white;
        }

        .card-body {
            background-color: #08415C;
            background-size: 700px;
            border-style: solid;
        }

        .table-hover {
            margin: 20px;
        }

        tr {
            margin: 20px;
        }

        th {
            margin: 20px;
            min-width: 75px;
            padding-right: 20px;
        }

        td {
            margin: 20px;
            min-width: 75px;
            padding-right: 20px;
        }

        #profileCard {
            margin-top: 25px;
            color: white;
        }

        #editProfile {
            margin-left: 5px;
        }

        #level {
            height: 70px;
            width: 70px;
        }


        #ribbon {
            height: 60px;
            width: 60px;
        }

        #orb {
            height: 60px;
            width: 60px;
        }

        #hostlevel {
            font-size: 30px;
        }

        body {
            background-color: #93B7BE
        }

        .body-content {
            padding-left: 15px;
            padding-right: 15px;
            color: black;
        }

        #tab {
            background-color: Highlight;
            margin-left: 8px;
            color: black;
            border-radius: 5%;
            padding: 5px;
            font-size: 24px;
        }

        #navPills {
            margin: auto;
            width: 90%;
        }
    </style>

    <script src="~/Scripts/RelationshipFunctions.js"></script>
